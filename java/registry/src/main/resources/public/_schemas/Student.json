{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "properties": {
    "Student": {
      "$ref": "#/definitions/Student"
    }
  },
  "required": [
    "Student"
  ],
  "title":"Student",
  "definitions": {
    "Student": {
      "$id": "#/properties/Student",
      "type": "object",
      "title": "The Student Schema",
      "required": [
        "studentName",
        "studentCode",
        "nationalIdentifier",
        "class",
        "gender"
      ],
      "properties": {
        "instituteId": {
          "$id": "#/properties/instituteId",
          "type": "string",
          "$comment": "Institute Id"
        },
        "studentCode": {
          "$id": "#/properties/studentCode",
          "type": "string",
          "$comment": "Code"
        },
        "nationalIdentifier": {
          "$id": "#/properties/nationalIdentifier",
          "type": "string",
          "$comment": "Nationality"
        },
        "studentName": {
          "$id": "#/properties/studentName",
          "type": "string",
          "title": "Full name"
        },
        "gender": {
          "$id": "#/properties/gender",
          "type": "string",
          "enum": [
            "Male",
            "Female",
            "Other"
          ]
        },
        "birthDate": {
          "$id": "#/properties/birthDate",
          "type": "string",
          "format": "date"
        },
        "email": {
          "$id": "#/properties/email",
          "type": "string"
        },
        "mobile": {
          "$id": "#/properties/mobile",
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "education": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "degree": {
                "type": "string"
              },
              "institute": {
                "type": "string"
              },
              "start": {
                "type": "string",
                "format": "date"
              },
              "end": {
                "type": "string",
                "format": "date"
              }
            }
          }
        },
        "experience": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "start": {
                "type": "string",
                "format": "date"
              },
              "end": {
                "type": "string",
                "format": "date"
              }
            }
          }
        },
        "certification": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "institute": {
                "type": "string"
              },
              "start": {
                "type": "string",
                "format": "date"
              },
              "end": {
                "type": "string",
                "format": "date"
              }
            }
          }
        }
      }
    }
  },
  "_osConfig": {
         "osComment": ["This section contains the OpenSABER specific configuration information",
                      "privateFields: Optional; list of field names to be encrypted and stored in database",
                      "signedFields: Optional; list of field names that must be pre-signed",
                      "indexFields: Optional; list of field names used for creating index. Enclose within braces to indicate it is a composite index. In this definition, (serialNum, studentCode) is a composite index and studentName is a single column index.",
                      "uniqueIndexFields: Optional; list of field names used for creating unique index. Field names must be different from index field name",
                      "systemFields: Optional; list of fields names used for system standard information like created, updated timestamps and userid"],

         "privateFields": ["studentCode", "birthDate"],
         "signedFields": [],
         "indexFields": ["studentCode","studentName"],
         "uniqueIndexFields": ["studentCode"],
         "systemFields": ["_osCreatedAt", "_osUpdatedAt", "_osCreatedBy", "_osUpdatedBy"],
    "attestations": [
      {
        "paths": ["education"],
        "role": "bo",
        "constraint": "same_block"
      }
      ]
  }
}