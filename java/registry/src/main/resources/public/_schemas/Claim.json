{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "properties": {
    "Claim": {
      "$ref": "#/definitions/Claim"
    }
  },
  "required": [
    "Claim"
  ],
  "title":"Claim",
  "definitions": {
    "Claim": {
      "$id": "#/properties/Claim",
      "type": "object",
      "title": "The Claim Schema",
      "required": [
        "entity",
        "property",
        "entityId",
        "propertyId"
      ],
      "properties": {
        "entityId": {
          "$id": "#/properties/entityId",
          "type": "string",
          "$comment": "Entity Id"
        },
        "propertyId": {
          "$id": "#/properties/propertyId",
          "type": "string",
          "$comment": "Property Id"
        },
        "entity": {
          "$id": "#/properties/entity",
          "type": "string",
          "$comment": "Name of the entity, Will be used to fetch the policies (eg. path, role)"
        },
        "property": {
          "$id": "#/properties/property",
          "type": "string",
          "$comment": "to fetch the property details"
        },
        "instituteId": {
          "$id": "#/properties/instituteId",
          "type": "string",
          "$comment": "it identifies the specific institute"
        }
      }
    }
  },
  "_osConfig": {
    "osComment": ["This section contains the OpenSABER specific configuration information",
      "privateFields: Optional; list of field names to be encrypted and stored in database",
      "signedFields: Optional; list of field names that must be pre-signed",
      "indexFields: Optional; list of field names used for creating index. Enclose within braces to indicate it is a composite index. In this definition, (serialNum, studentCode) is a composite index and studentName is a single column index.",
      "uniqueIndexFields: Optional; list of field names used for creating unique index. Field names must be different from index field name",
      "systemFields: Optional; list of fields names used for system standard information like created, updated timestamps and userid"]
  }
}