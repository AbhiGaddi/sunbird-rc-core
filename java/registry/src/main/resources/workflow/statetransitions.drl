import io.opensaber.registry.model.state.StateContext;
import io.opensaber.registry.model.state.States;

rule "Attestor granted the claim"
    when
        stateDefinition : StateContext(requestBodyHas("action") && getRequestBodyVal("action") == "GRANTED");
    then
        stateDefinition.setState(States.PUBLISHED);
end

rule "Attestor rejected the claim"
    when
        stateDefinition : StateContext(requestBodyHas("action") && getRequestBodyVal("action") == "DENIED");
    then
        stateDefinition.setState(States.REJECTED);
end

rule "Set starting state as draft"
    when
        stateDefinition:StateContext(existingNode == null);
    then
        stateDefinition.setState(States.DRAFT);
end

rule "Set state as draft if there is a change"
    when
        stateDefinition:StateContext(existingNode != null && isAttributesChanged());
    then
        stateDefinition.setState(States.DRAFT);
end

rule "Set state as attestation requested"
    when
        stateDefinition:StateContext(existingNode != null && isAttestationRequested());
    then
        stateDefinition.setState(States.ATTESTATION_REQUESTED);
end
