spring:
  profiles.active: dev
---
##################################################################
#                      DEVELOPMENT PROFILE                       #
##################################################################
spring:
  profiles: dev
name: dev-yaml
enviroment: development

registry:
  context:
    base: http://example.com/voc/teacher/1.0.0/
  system:
    base: http://example.com/voc/opensaber/

# IRI of the datatype of the records issued/stored in registry, for e.g if namespace of the
# teacher registry is http://example.com/voc/teacher/1.0.0/ and type is
# Teacher, then configure this field as
# http://example.com/voc/teacher/1.0.0/Teacher
subject:
  label:
    type: http://example.com/voc/teacher/1.0.0/Teacher

#This refers to the opensaber schema configuration JSON-LD file
config:
  schema:
    file: schema-configuration.jsonld

database:
  provider: NEO4J
  embedded: false
  # Set an environment variable NEO4J_HOST if running Neo4J as a standalone host
  # This variable is set from the docker-compose.yml with the Neo4J service name
  host: ${NEO4J_HOST}
  port: 7687
  neo4j-directory: /data/databases/graph.db
  neo4j-profiler-enabled: false

# RDF Validation Config
validations:
  file: validations.shex
  entity:
    shape:
      name: http://example.com/voc/teacher/1.0.0/TeacherShape
      type: http://example.com/voc/teacher/1.0.0/Teacher

# Http Connection Timeout Config
connection:
  timeout: 5000
  request:
    timeout: 5000
read:
  timeout: 5000

encryption:
  base: https://dev.open-sunbird.org/encryption/
  uri: https://dev.open-sunbird.org/encryption/encrypt

decryption:
  uri: https://dev.open-sunbird.org/encryption/decrypt
  
# Feature Toggling
feature:
  toggling: false
---
##################################################################
#                      STAGING PROFILE                           #
##################################################################
spring:
  profiles: staging
name: staging-yaml
enviroment: staging

registry:
  context:
    base: http://example.com/voc/teacher/1.0.0/
  system:
    base: http://example.com/voc/opensaber/

# IRI of the datatype of the records issued/stored in registry, for e.g if namespace of the
# teacher registry is http://example.com/voc/teacher/1.0.0/ and type is
# Teacher, then configure this field as
# http://example.com/voc/teacher/1.0.0/Teacher
subject:
  label:
    type: http://example.com/voc/teacher/1.0.0/Teacher

#This refers to the opensaber schema configuration JSON-LD file
config:
  schema:
    file: schema-configuration.jsonld

database:
  provider: NEO4J
  embedded: false
  # Set an environment variable NEO4J_HOST if running Neo4J as a standalone host
  # This variable is set from the docker-compose.yml with the Neo4J service name
  host: ${NEO4J_HOST}
  port: 7687
  neo4j-directory: /data/databases/graph.db
  neo4j-profiler-enabled: false

# RDF Validation Config
validations:
  file: validations.shex
  entity:
    shape:
      name: http://example.com/voc/teacher/1.0.0/TeacherShape
      type: http://example.com/voc/teacher/1.0.0/Teacher

# Http Connection Timeout Config
connection:
  timeout: 5000
  request:
    timeout: 5000
read:
  timeout: 5000

encryption:
  base: https://staging.open-sunbird.org/encryption/
  uri: https://staging.open-sunbird.org/encryption/encrypt

decryption:
  uri: https://staging.open-sunbird.org/encryption/decrypt
  
# Feature Toggling
feature:
  toggling: false
---
##################################################################
#                      TEST PROFILE                              #
##################################################################
spring:
  profiles: test
name: test-yaml
enviroment: test

registry:
  context:
    base: http://example.com/voc/teacher/1.0.0/
  system:
    base: http://example.com/voc/opensaber/

subject:
  label:
    type: http://example.com/voc/teacher/1.0.0/School

#This refers to the opensaber schema configuration JSON-LD file
config:
  schema:
    file: schema-configuration-school-test.jsonld

database:
  provider: TINKERGRAPH

# RDF Validation Config
validations:
  file: good1.shex

# Http Connection Timeout Config
connection:
  timeout: 5000
  request:
    timeout: 5000
read:
  timeout: 5000

encryption:
  base: https://dev.open-sunbird.org/encryption/
  uri: https://dev.open-sunbird.org/encryption/encrypt

decryption:
  uri: https://dev.open-sunbird.org/encryption/decrypt
  
# Feature Toggling
feature:
  toggling: false